name: Build step

on:
  push:
    branches: [ 'master' ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.12.1]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present

  test-stage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Running Tests
        uses: actions/checkout@v3
        run: echo "running test"

  build-and-push-docker-image:
    name: Build Docker image and push ro repositories
    runs-on: ubuntu-latest
    needs: ['build', 'test-stage']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GIT_AUTH_TOKEN  }}

      - name: Build image and push to Docker Hub and Github Container Registry
        uses: docker/build-push-action@v2
        with:
          context: app
          tags: /
            fi-ml/ARGOCD:{{ github:sha }}
            ghcr.io/fi-ml/ARGOCD:{{ github:sha }}
          push: ${{ github.ref == 'refs/heads/master' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  update-manifest-stage:
    runs-on: ubuntu-latest
    needs: ['build-and-push-docker-image']
    steps:
      - uses: actions/checkout@v3
        with:
          repository: fi-ml/ARGOCD/infra
          ref: 'master'
          token: ${{ secrets.GIT_AUTH_TOKEN  }}
      - name: setup git config
        run: /
          git config --global user.email "maximilianlamm.kontakt@outlook.de"
          git config --global user.name "maximilianlamm"
          echo ${{ github.sha }}
          sed -i "s#${{ github.actor}}.*${{ github.actor}}/ARGOCD:${{ github.sha }}#g" deployment.yaml
          git add -A
          git commit -am "update image for - ${{ github.sha }}
      - run: echo ${{ github }}
      - run: git push origin master
